-- MySQL Script generated by MySQL Workbench
-- Sat Jun 28 10:29:32 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`estudiante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estudiante` (
  `ciestudiante` INT NOT NULL,
  `apellidos` VARCHAR(45) NULL,
  `nombres` VARCHAR(45) NULL,
  `lugar(nac)` VARCHAR(45) NULL,
  `fecha(nac)` VARCHAR(45) NULL,
  `nacionalidad` VARCHAR(45) NULL,
  `edad` VARCHAR(45) NULL,
  PRIMARY KEY (`ciestudiante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`autorizado para retiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`autorizado para retiro` (
  `ciautorizado` INT NOT NULL,
  `apellidos` VARCHAR(45) NULL,
  `nombres` VARCHAR(45) NULL,
  `tlf` VARCHAR(45) NULL,
  `parentesco` VARCHAR(45) NULL,
  PRIMARY KEY (`ciautorizado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`diagnostico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`diagnostico` (
  `iddiagnostico` INT NOT NULL,
  `problema parto` VARCHAR(45) NULL,
  `problema motor` VARCHAR(45) NULL,
  `problema lenguaje` VARCHAR(45) NULL,
  `problema cognitivo` VARCHAR(45) NULL,
  `alergia a medicamento` VARCHAR(45) NULL,
  `condicion extra` VARCHAR(45) NULL,
  `estudiante_ciestudiante` INT NOT NULL,
  PRIMARY KEY (`iddiagnostico`, `estudiante_ciestudiante`),
  INDEX `fk_diagnostico_estudiante1_idx` (`estudiante_ciestudiante` ASC) VISIBLE,
  CONSTRAINT `fk_diagnostico_estudiante1`
    FOREIGN KEY (`estudiante_ciestudiante`)
    REFERENCES `mydb`.`estudiante` (`ciestudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`documentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`documentos` (
  `iddocumentos` INT NOT NULL,
  `originales` VARCHAR(45) NULL,
  `fotocopias` VARCHAR(45) NULL,
  `partida de nac` VARCHAR(45) NULL,
  `certificado de vacunas` VARCHAR(45) NULL,
  `cedulas` VARCHAR(45) NULL,
  `responsable de inscripcion` VARCHAR(45) NULL,
  `persona quien inscribe` VARCHAR(45) NULL,
  `fecha de inscripcion` VARCHAR(45) NULL,
  `observaciones` VARCHAR(45) NULL,
  `estudiante_ciestudiante` INT NOT NULL,
  PRIMARY KEY (`iddocumentos`, `estudiante_ciestudiante`),
  INDEX `fk_documentos_estudiante1_idx` (`estudiante_ciestudiante` ASC) VISIBLE,
  CONSTRAINT `fk_documentos_estudiante1`
    FOREIGN KEY (`estudiante_ciestudiante`)
    REFERENCES `mydb`.`estudiante` (`ciestudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`representante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`representante` (
  `cirepresentante` INT NOT NULL,
  `apellidos` VARCHAR(45) NULL,
  `nombres` VARCHAR(45) NULL,
  `estdciv` VARCHAR(45) NULL,
  `lugar(nac)` VARCHAR(45) NULL,
  `fecha(nac)` VARCHAR(45) NULL,
  `nacionalidad` VARCHAR(45) NULL,
  `edad` VARCHAR(45) NULL,
  `direccion(hab)` VARCHAR(45) NULL,
  `grado(estudios)` VARCHAR(45) NULL,
  `ocupacion` VARCHAR(45) NULL,
  `direccion(trabj)` VARCHAR(45) NULL,
  `tlf` VARCHAR(45) NULL,
  `correo` VARCHAR(45) NULL,
  `parentesco` VARCHAR(45) NULL,
  `ni√±os menores de 6` VARCHAR(45) NULL,
  PRIMARY KEY (`cirepresentante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`representante_has_estudiante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`representante_has_estudiante` (
  `representante o responsable_copy2_cirepresentante` INT NOT NULL,
  `estudiante_ciestudiante` INT NOT NULL,
  PRIMARY KEY (`representante o responsable_copy2_cirepresentante`, `estudiante_ciestudiante`),
  INDEX `fk_representante o responsable_copy2_has_estudiante_estudia_idx` (`estudiante_ciestudiante` ASC) VISIBLE,
  INDEX `fk_representante o responsable_copy2_has_estudiante_represe_idx` (`representante o responsable_copy2_cirepresentante` ASC) VISIBLE,
  CONSTRAINT `fk_representante o responsable_copy2_has_estudiante_represent`
    FOREIGN KEY (`representante o responsable_copy2_cirepresentante`)
    REFERENCES `mydb`.`representante` (`cirepresentante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_representante o responsable_copy2_has_estudiante_estudiante1`
    FOREIGN KEY (`estudiante_ciestudiante`)
    REFERENCES `mydb`.`estudiante` (`ciestudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`autorizado para retiro_has_estudiante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`autorizado para retiro_has_estudiante` (
  `autorizado para retiro_ciautorizado` INT NOT NULL,
  `estudiante_ciestudiante` INT NOT NULL,
  PRIMARY KEY (`autorizado para retiro_ciautorizado`, `estudiante_ciestudiante`),
  INDEX `fk_autorizado para retiro_has_estudiante_estudiante1_idx` (`estudiante_ciestudiante` ASC) VISIBLE,
  INDEX `fk_autorizado para retiro_has_estudiante_autorizado para re_idx` (`autorizado para retiro_ciautorizado` ASC) VISIBLE,
  CONSTRAINT `fk_autorizado para retiro_has_estudiante_autorizado para reti1`
    FOREIGN KEY (`autorizado para retiro_ciautorizado`)
    REFERENCES `mydb`.`autorizado para retiro` (`ciautorizado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_autorizado para retiro_has_estudiante_estudiante1`
    FOREIGN KEY (`estudiante_ciestudiante`)
    REFERENCES `mydb`.`estudiante` (`ciestudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
